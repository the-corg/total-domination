<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:prop="clr-namespace:TotalDomination.Properties">

    <!-- ToolTip style  -->
    <Style TargetType="ToolTip">
        <Setter Property="Background" Value="{StaticResource ToolTipBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource TitleBarGray}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource Gold}"/>
        <Setter Property="FontSize" Value="{StaticResource ToolTipFontSize}"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontFamily" Value="Cascadia Mono, Consolas"/>
        <Setter Property="MaxWidth" Value="{Binding ToolTipMaxWidth, Source={x:Static prop:Settings.Default}}"/>
        <Style.Resources>
            <Style TargetType="ContentPresenter">
                <Style.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="TextWrapping" Value="Wrap"/>
                    </Style>
                </Style.Resources>
            </Style>
        </Style.Resources>
    </Style>

    <!-- Title bar styles -->
    <Style TargetType="Button" x:Key="TitleBarButton">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource TitleBarGray}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Width" Value="{StaticResource TitleBarButtonSize}"/>
        <Setter Property="Height" Value="{StaticResource TitleBarButtonSize}"/>
        <Setter Property="FontSize" Value="{StaticResource TitleBarFontSize}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}">
                        <TextBlock Text="{TemplateBinding Content}" Margin="{TemplateBinding Padding}" VerticalAlignment="Center" TextAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource TitleBarGray}"/>
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource TitleThird}"/>
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="OpenFileButton" BasedOn="{StaticResource TitleBarButton}">
        <Setter Property="Padding" Value="3 -2 3 0"/>
        <Setter Property="Margin" Value="0 7 0 0"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="ToolTip" Value="{Binding TodoFilePath}"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="500"/>
        <Setter Property="FontSize" Value="{StaticResource FileButtonFontSize}"/>
        <Setter Property="Foreground" Value="{StaticResource TitleThird}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource TitleThird}"/>
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource Gold}"/>
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Listbox styles -->
    <Style TargetType="ListBox">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="0 4 0 0"/>
        <Setter Property="FontSize" Value="{StaticResource ListFontSize}"/>
    </Style>

    <Style TargetType="ListBoxItem">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Margin" Value="3 0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    </Style>

    <Style TargetType="ScrollBar">
        <Setter Property="Opacity" Value="0.2"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <!-- CheckBoxes in ListBox -->
    <Style TargetType="CheckBox">
        <!-- Strikethrough style for completed to-dos -->
        <Style.Resources>
            <Style TargetType="TextBlock">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsDone}" Value="True">
                        <Setter Property="TextDecorations">
                            <Setter.Value>
                                <TextDecorationCollection>
                                    <TextDecoration Location="Strikethrough">
                                        <TextDecoration.Pen>
                                            <Pen Thickness="1.7" Brush="{StaticResource Gold}"/>
                                        </TextDecoration.Pen>
                                    </TextDecoration>
                                </TextDecorationCollection>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
        <!-- Bindings -->
        <Setter Property="Foreground" Value="{Binding ColorBrush}"/>
        <Setter Property="FontWeight" Value="{Binding FontWeight}"/>
        <Setter Property="Command" Value="{Binding DataContext.DoneCommand, RelativeSource={RelativeSource AncestorType=ListBox}}"/>
        <Setter Property="CommandParameter" Value="{Binding IsDone}"/>
        <Setter Property="ToolTip" Value="{Binding Info}"/>
        <!-- Static values -->
        <Setter Property="ToolTipService.InitialShowDelay" Value="500"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="6 -1 0 2"/>
        <!-- Control template -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid x:Name="templateRoot" Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <!-- Box of CheckBox -->
                        <Viewbox Width="{StaticResource CheckBoxSize}">
                            <Border x:Name="checkBoxBorder" 
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid x:Name="markGrid">
                                    <Path x:Name="optionMark" 
                                      Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " 
                                      Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0" Stretch="None"/>
                                </Grid>
                            </Border>
                        </Viewbox>
                        <!-- Content of CheckBox -->
                        <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" Margin="{TemplateBinding Padding}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Celebration message styles -->
    <Style TargetType="Border" x:Key="SuccessMessageBorder">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="IsHitTestVisible" Value="False"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding CanCelebrate}" Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.3"/>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.5" BeginTime="0:0:0.8"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TextBlock" x:Key="SuccessMessageTextBlock">
        <Setter Property="Margin" Value="0 -12 0 0"/>
        <Setter Property="Foreground" Value="{StaticResource Gold}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="64"/>
        <Setter Property="IsHitTestVisible" Value="False"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>

</ResourceDictionary>